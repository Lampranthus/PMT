--altshift_taps CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" NUMBER_OF_TAPS=1 TAP_DISTANCE=10 WIDTH=18 clock shiftin taps CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 24.1 cbx_altdpram 2025:03:05:20:03:09:SC cbx_altera_counter 2025:03:05:20:03:09:SC cbx_altera_syncram 2025:03:05:20:03:09:SC cbx_altera_syncram_nd_impl 2025:03:05:20:03:09:SC cbx_altshift_taps 2025:03:05:20:03:09:SC cbx_altsyncram 2025:03:05:20:03:09:SC cbx_cycloneii 2025:03:05:20:03:09:SC cbx_lpm_add_sub 2025:03:05:20:03:09:SC cbx_lpm_compare 2025:03:05:20:03:09:SC cbx_lpm_counter 2025:03:05:20:03:09:SC cbx_lpm_decode 2025:03:05:20:03:09:SC cbx_lpm_mux 2025:03:05:20:03:09:SC cbx_mgl 2025:03:05:20:10:25:SC cbx_nadder 2025:03:05:20:03:09:SC cbx_stratix 2025:03:05:20:03:09:SC cbx_stratixii 2025:03:05:20:03:09:SC cbx_stratixiii 2025:03:05:20:03:09:SC cbx_stratixv 2025:03:05:20:03:09:SC cbx_util_mgl 2025:03:05:20:03:09:SC  VERSION_END


-- Copyright (C) 2025  Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Altera and sold by Altera or its authorized distributors.  Please
--  refer to the Altera Software License Subscription Agreements 
--  on the Quartus Prime software download page.


FUNCTION altsyncram_ie81 (address_a[2..0], address_b[2..0], clock0, clocken0, data_a[17..0], wren_a)
RETURNS ( q_b[17..0]);
FUNCTION cntr_cpf (clk_en, clock)
RETURNS ( q[2..0]);

--synthesis_resources = lut 3 M9K 1 reg 3 
SUBDESIGN shift_taps_s7m
( 
	clock	:	input;
	shiftin[17..0]	:	input;
	shiftout[17..0]	:	output;
	taps[17..0]	:	output;
) 
VARIABLE 
	altsyncram2 : altsyncram_ie81;
	cntr1 : cntr_cpf;
	clken	: NODE;

BEGIN 
	altsyncram2.address_a[] = cntr1.q[];
	altsyncram2.address_b[] = cntr1.q[];
	altsyncram2.clock0 = clock;
	altsyncram2.clocken0 = clken;
	altsyncram2.data_a[] = ( shiftin[]);
	altsyncram2.wren_a = B"1";
	cntr1.clk_en = clken;
	cntr1.clock = clock;
	clken = VCC;
	shiftout[17..0] = altsyncram2.q_b[17..0];
	taps[] = altsyncram2.q_b[];
END;
--VALID FILE
